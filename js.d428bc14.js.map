{"version":3,"sources":["js/timer.js","js/index.js"],"names":["CountdownTimer","constructor","selector","targetDate","_selectorEL","document","querySelector","_daysEL","_hoursEL","_minsEL","_secsEL","_time","_intervalId","_isActive","start","setInterval","time","getTimeComponents","Date","now","insertValues","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","timer"],"mappings":";AAAoC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAArB,MAAMA,EACnBC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,YAAcC,SAASC,cAAcJ,GACrCK,KAAAA,QAAU,KAAKH,YAAYE,cAAc,uBACzCE,KAAAA,SAAW,KAAKJ,YAAYE,cAAc,sBAC1CG,KAAAA,QAAU,KAAKL,YAAYE,cAAc,qBACzCI,KAAAA,QAAU,KAAKN,YAAYE,cAAc,qBACzCK,KAAAA,MAAQR,EACRS,KAAAA,YAAc,KACdC,KAAAA,WAAY,EAGnBC,QACM,KAAKD,YAIJA,KAAAA,WAAY,EACZD,KAAAA,YAAcG,YAAY,KACvBC,MAAAA,EAAO,KAAKC,kBAAkB,KAAKN,MAAQO,KAAKC,OACjDC,KAAAA,aAAaJ,IACjB,MAGLC,kBAAkBD,GACZA,GAAAA,GAAQ,EAAG,CAQR,MAAA,CAAEK,KAPI,KAAKC,IAAIC,KAAKC,MAAMR,EAAQ,QAO1BS,MAND,KAAKH,IACjBC,KAAKC,MAAOR,EAAQ,MAAyB,OAKzBU,KAHT,KAAKJ,IAAIC,KAAKC,MAAOR,EAAQ,KAAoB,MAGlCW,KAFf,KAAKL,IAAIC,KAAKC,MAAOR,EAAQ,IAAc,QAM1DM,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCV,cAAa,KAAEC,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC3BpB,KAAAA,QAAQwB,YAAcV,EACtBb,KAAAA,SAASuB,YAAcN,EACvBhB,KAAAA,QAAQsB,YAAcL,EACtBhB,KAAAA,QAAQqB,YAAcJ,GA7CK,QAAA,QAAA;;ACOpC,aAPA,IAAA,EAAA,EAAA,QAAA,eAOA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALA,MAAMK,EAAQ,IAAIhC,EAAJ,QAAmB,CAC/BE,SAAU,WACVC,WAAY,IAAIe,KAAK,4BAGvBc,EAAMlB","file":"js.d428bc14.js","sourceRoot":"..","sourcesContent":["export default class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this._selectorEL = document.querySelector(selector);\n    this._daysEL = this._selectorEL.querySelector('[data-value=\"days\"]');\n    this._hoursEL = this._selectorEL.querySelector('[data-value=hours]');\n    this._minsEL = this._selectorEL.querySelector('[data-value=mins]');\n    this._secsEL = this._selectorEL.querySelector('[data-value=secs]');\n    this._time = targetDate;\n    this._intervalId = null;\n    this._isActive = false;\n  }\n\n  start() {\n    if (this._isActive) {\n      return;\n    }\n\n    this._isActive = true;\n    this._intervalId = setInterval(() => {\n      const time = this.getTimeComponents(this._time - Date.now());\n      this.insertValues(time);\n    }, 1000);\n    }\n\n  getTimeComponents(time) {\n    if (time >= 0) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n    }\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  insertValues({ days, hours, mins, secs }) {\n    this._daysEL.textContent = days;\n    this._hoursEL.textContent = hours;\n    this._minsEL.textContent = mins;\n    this._secsEL.textContent = secs;\n  }\n}","import CountdownTimer from './timer.js';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 12, 2021, 21:01:00'),\n});\n\ntimer.start();"]}