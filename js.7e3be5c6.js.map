{"version":3,"sources":["js/index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","timerFace","getElementById","CountdownTimer","constructor","selector","targetDate","setInterval","nowDate","Date","now","time","updateClockface","timeFinish","pad","Math","floor","textContent","value","String","padStart","clearInterval","setInt"],"mappings":";AA4CA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5CA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,6BAC7BC,MAAOF,SAASC,cAAc,8BAC9BE,KAAMH,SAASC,cAAc,6BAC7BG,KAAMJ,SAASC,cAAc,6BAC7BI,UAAWL,SAASM,eAAe,YAGrC,MAAMC,EACJC,aAAY,SAAEC,EAAF,WAAYC,IAKfC,EAAAA,KAAAA,SAAAA,YAAY,KACbC,MAAAA,EAAUC,KAAKC,MACfC,EAAO,KAAKL,WAAaE,EAC1BI,KAAAA,gBAAgBD,GACpBE,KAAAA,WAAWF,IACX,MATIN,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAUpBM,gBAAgBD,GACRhB,MAAAA,EAAO,KAAKmB,IAAIC,KAAKC,MAAML,EAAQ,QACnCb,EAAQ,KAAKgB,IACjBC,KAAKC,MAAOL,EAAQ,MAAyB,OAEzCZ,EAAO,KAAKe,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MACxDX,EAAO,KAAKc,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,MACxDjB,EAAKC,KAAKsB,eAAiBtB,IAC3BD,EAAKI,MAAMmB,eAAiBnB,IAC5BJ,EAAKK,KAAKkB,eAAiBlB,IAC3BL,EAAKM,KAAKiB,eAAiBjB,IAG7Bc,IAAII,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAEnCP,WAAWF,GACLA,EAAO,IACTU,cAAc,KAAKC,QACnB5B,EAAKO,UAAUgB,YAAc,sBAInC,IAAId,EAAe,CACjBE,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"js.7e3be5c6.js","sourceRoot":"..","sourcesContent":["const refs = {\n  days: document.querySelector('.value[data-value=\"days\"]'),\n  hours: document.querySelector('.value[data-value=\"hours\"]'),\n  mins: document.querySelector('.value[data-value=\"mins\"]'),\n  secs: document.querySelector('.value[data-value=\"secs\"]'),\n  timerFace: document.getElementById(\"timer-1\"),\n};\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  setInt = setInterval(() => {\n    const nowDate = Date.now();\n    const time = this.targetDate - nowDate;\n    this.updateClockface(time);\nthis.timeFinish(time);\n  }, 1000);\n\n  updateClockface(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n  timeFinish(time) {\n    if (time < 0) {\n      clearInterval(this.setInt);\n      refs.timerFace.textContent = \"HAPPY NEW YEAR!!!\";\n    }\n  }\n};\nnew CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Dec 31, 2021\"),\n});"]}